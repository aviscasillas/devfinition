[
  {
    "name": "Circuit Breaker pattern",
    "definition": "Handle faults that might take a variable amount of time to recover from, when connecting to a remote service or resource. This can improve the stability and resiliency of an application.",
    "link": "https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker"
  },
  {
    "name": "Continuation-Passing Style (CPS)",
    "definition": "A style of programming in which functions do not return values; rather, they pass control onto a continuation, which specifies what happens next.",
    "link": "https://en.wikibooks.org/wiki/Haskell/Continuation_passing_style"
  },
  {
    "name": "Domain Driven Design (DDD)",
    "definition": "Domain Driven Design is a method of connecting software architecture and relevant domains by using a universally accepted model. In other words, the software matches the domain.",
    "link": "https://circleci.com/blog/exploring-domain-driven-design-at-circleci/?utm_medium=SEM&utm_source=gnb&utm_campaign=SEM-gnb-DSA-Eng-ni&utm_content=&utm_term=dynamicSearch-&gclid=CjwKCAiAzNj9BRBDEiwAPsL0d2eKoKA1AlVYlyvMu-k-EdVPApm9q2g5EU8STZxXrp3a11txB50unxoCZMwQAvD_BwE"
  },
  {
    "name": "Facade Pattern",
    "definition": "Is a software design pattern commonly used with object-oriented programming. The name is by analogy to an architectural facade.",
    "link": "http://jargon.js.org/_glossary/FACADE_PATTERN.md"
  },
  {
    "name": "Gang of Four (GoF)",
    "definition": "The Gang of Four are the four authors of the book, \"Design Patterns: Elements of Reusable Object-Oriented Software\".",
    "link": "http://www.blackwasp.co.uk/gofpatterns.aspx"
  },
  {
    "name": "Higher-order function",
    "definition": "A function that either takes a function as an argument, returns a function as its return value, or both.",
    "link": "https://lispcast.com/what-is-a-higher-order-function/"
  },
  {
    "name": "OPP: Polymorphism",
    "definition": "Objects of different types can be accessed through the same interface.",
    "link": "https://stackify.com/oop-concept-polymorphism/"
  },
  {
    "name": "MVC",
    "definition": "Model View Controller is an architectural pattern that separates an application into three main logical components: the model, the view, and the controller.",
    "link": "https://medium.com/@anshul.vyas380/mvc-pattern-3b5366e60ce4"
  },
  {
    "name": "Referential transparency",
    "definition": "In functional programming, referential transparency is generally defined as the fact that an expression, in a program, may be replaced by its value (or anything having the same value) without changing the result of the program.",
    "link": "https://www.sitepoint.com/what-is-referential-transparency/"
  },
  {
    "name": "SOLID",
    "definition": "S.O.L.I.D is an acronym for the first five object-oriented design(OOD)** principles** by Robert C. Martin, popularly known as Uncle Bob.",
    "link": "https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design"
  },
  {
    "name": "Tail Recursion",
    "definition": "A recursive function is tail recursive when recursive call is the last thing executed by the function.",
    "link": "https://www.geeksforgeeks.org/tail-recursion/"
  }
]
